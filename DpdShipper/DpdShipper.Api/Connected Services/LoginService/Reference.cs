//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LoginService
{
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dpd.com/common/service/types/Authentication/2.0")]
    public partial class AuthenticationFault
    {
        
        private string errorCodeField;
        
        private string errorMessageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string errorCode
        {
            get
            {
                return this.errorCodeField;
            }
            set
            {
                this.errorCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public string errorMessage
        {
            get
            {
                return this.errorMessageField;
            }
            set
            {
                this.errorMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GetAuthResponseDto))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dpd.com/common/service/types/LoginService/2.1")]
    public partial class Login
    {
        
        private string delisIdField;
        
        private string customerUidField;
        
        private string authTokenField;
        
        private string depotField;
        
        private System.DateTime authTokenExpiresField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string delisId
        {
            get
            {
                return this.delisIdField;
            }
            set
            {
                this.delisIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string customerUid
        {
            get
            {
                return this.customerUidField;
            }
            set
            {
                this.customerUidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string authToken
        {
            get
            {
                return this.authTokenField;
            }
            set
            {
                this.authTokenField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string depot
        {
            get
            {
                return this.depotField;
            }
            set
            {
                this.depotField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public System.DateTime authTokenExpires
        {
            get
            {
                return this.authTokenExpiresField;
            }
            set
            {
                this.authTokenExpiresField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dpd.com/common/service/types/LoginService/2.1")]
    public partial class GetAuthResponseDto : Login
    {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://dpd.com/common/service/types/LoginService/2.1", ConfigurationName="LoginService.LoginServiceSoapSoap")]
    public interface LoginServiceSoapSoap
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dpd.com/common/service/types/LoginService/2.1/getAuth", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(LoginService.AuthenticationFault), Action="http://dpd.com/common/service/types/LoginService/2.1/getAuth", Name="authenticationFault", Namespace="http://dpd.com/common/service/types/Authentication/2.0")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Login))]
        System.Threading.Tasks.Task<LoginService.getAuthResponse> getAuthAsync(LoginService.getAuthRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getAuth", WrapperNamespace="http://dpd.com/common/service/types/LoginService/2.1", IsWrapped=true)]
    public partial class getAuthRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://dpd.com/common/service/types/LoginService/2.1", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string delisId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://dpd.com/common/service/types/LoginService/2.1", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://dpd.com/common/service/types/LoginService/2.1", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string messageLanguage;
        
        public getAuthRequest()
        {
        }
        
        public getAuthRequest(string delisId, string password, string messageLanguage)
        {
            this.delisId = delisId;
            this.password = password;
            this.messageLanguage = messageLanguage;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getAuthResponse", WrapperNamespace="http://dpd.com/common/service/types/LoginService/2.1", IsWrapped=true)]
    public partial class getAuthResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://dpd.com/common/service/types/LoginService/2.1", Order=0)]
        public LoginService.GetAuthResponseDto @return;
        
        public getAuthResponse()
        {
        }
        
        public getAuthResponse(LoginService.GetAuthResponseDto @return)
        {
            this.@return = @return;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    public interface LoginServiceSoapSoapChannel : LoginService.LoginServiceSoapSoap, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.1.0")]
    public partial class LoginServiceSoapSoapClient : System.ServiceModel.ClientBase<LoginService.LoginServiceSoapSoap>, LoginService.LoginServiceSoapSoap
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public LoginServiceSoapSoapClient() : 
                base(LoginServiceSoapSoapClient.GetDefaultBinding(), LoginServiceSoapSoapClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.LoginServiceSoapSoap.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public LoginServiceSoapSoapClient(EndpointConfiguration endpointConfiguration) : 
                base(LoginServiceSoapSoapClient.GetBindingForEndpoint(endpointConfiguration), LoginServiceSoapSoapClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public LoginServiceSoapSoapClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(LoginServiceSoapSoapClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public LoginServiceSoapSoapClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(LoginServiceSoapSoapClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public LoginServiceSoapSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<LoginService.getAuthResponse> LoginService.LoginServiceSoapSoap.getAuthAsync(LoginService.getAuthRequest request)
        {
            return base.Channel.getAuthAsync(request);
        }
        
        public System.Threading.Tasks.Task<LoginService.getAuthResponse> getAuthAsync(string delisId, string password, string messageLanguage)
        {
            LoginService.getAuthRequest inValue = new LoginService.getAuthRequest();
            inValue.delisId = delisId;
            inValue.password = password;
            inValue.messageLanguage = messageLanguage;
            return ((LoginService.LoginServiceSoapSoap)(this)).getAuthAsync(inValue);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.LoginServiceSoapSoap))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.Transport;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.LoginServiceSoapSoap))
            {
                return new System.ServiceModel.EndpointAddress("https://wsshippertest.dpd.nl/PublicApi/services/LoginService/V2_1");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return LoginServiceSoapSoapClient.GetBindingForEndpoint(EndpointConfiguration.LoginServiceSoapSoap);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return LoginServiceSoapSoapClient.GetEndpointAddress(EndpointConfiguration.LoginServiceSoapSoap);
        }
        
        public enum EndpointConfiguration
        {
            
            LoginServiceSoapSoap,
        }
    }
}
